// src/components/assessment/ResultsView.tsx
'use client';

import { useState, useEffect } from 'react';
import { useRouter } from 'next/navigation';
import { Card } from '@/components/ui/Card';
import { Button } from '@/components/ui/Button';
import { GoalSetting } from './GoalSetting';
import { AssessmentResult } from '@/types/assessment.types';
import { clientDatabaseService } from '@/lib/services/clientDatabaseService';

interface ResultsViewProps {
  result: AssessmentResult;
  onContinue: () => void;
}

export const ResultsView: React.FC<ResultsViewProps> = ({ result, onContinue }) => {
  const router = useRouter();
  const [showGoalSetting, setShowGoalSetting] = useState(false);
  const [isSaving, setIsSaving] = useState(false);
  const [savedAssessmentId, setSavedAssessmentId] = useState<string | null>(null);

  // üî• –°–û–•–†–ê–ù–ï–ù–ò–ï –†–ï–ó–£–õ–¨–¢–ê–¢–û–í –í –ë–ê–ó–£ –î–ê–ù–ù–´–• SQLite
  useEffect(() => {
    const saveResultsToDB = async () => {
      try {
        setIsSaving(true);
        
        // –í—ã—á–∏—Å–ª—è–µ–º –æ–±—â—É—é —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
        const totalQuestions = result.themeBreakdown.reduce((total, theme) => total + theme.total, 0);
        const correctAnswers = result.themeBreakdown.reduce((total, theme) => total + theme.correct, 0);
        const incorrectAnswers = totalQuestions - correctAnswers;

        // –ü–æ–¥–≥–æ—Ç–∞–≤–ª–∏–≤–∞–µ–º –¥–∞–Ω–Ω—ã–µ –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –≤ –ë–î (—Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç –≤–∞—à–µ–π —Å—Ö–µ–º–µ)
        const assessmentData = {
          userId: 'user-' + Date.now(),
          subject: '–ú–∞—Ç–µ–º–∞—Ç–∏–∫–∞',
          topic: '–í—Ö–æ–¥–Ω–æ–µ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ',
          totalQuestions: totalQuestions,
          correctAnswers: correctAnswers,
          incorrectAnswers: incorrectAnswers,
          timestamp: new Date().toISOString()
        };

        console.log('üíæ Saving assessment data to SQLite:', assessmentData);

        // –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤ –ë–î —á–µ—Ä–µ–∑ –≤–∞—à –∫–ª–∏–µ–Ω—Ç—Å–∫–∏–π —Å–µ—Ä–≤–∏—Å
        const success = await clientDatabaseService.saveResult(assessmentData);
        
        if (success) {
          console.log('‚úÖ –†–µ–∑—É–ª—å—Ç–∞—Ç—ã —É—Å–ø–µ—à–Ω–æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã –≤ SQLite –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö');
          
          // –ü–æ–ª—É—á–∞–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è ID
          const userResults = await clientDatabaseService.getUserResults(assessmentData.userId);
          if (userResults.length > 0) {
            const latestResult = userResults[0];
            setSavedAssessmentId(latestResult.id?.toString() || null);
            localStorage.setItem('lastAssessmentId', latestResult.id?.toString() || '');
            localStorage.setItem('currentUserId', assessmentData.userId);
          }
        } else {
          console.error('‚ùå –û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –≤ SQLite –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö');
        }
      } catch (error) {
        console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ –≤ SQLite:', error);
      } finally {
        setIsSaving(false);
      }
    };

    saveResultsToDB();
  }, [result]);

  const getScoreColor = (score: number) => {
    if (score >= 80) return 'text-green-600';
    if (score >= 60) return 'text-yellow-600';
    return 'text-red-600';
  };

  const getScoreMessage = (score: number) => {
    if (score >= 80) return '–û—Ç–ª–∏—á–Ω–æ! –£ –≤–∞—Å –ø—Ä–æ—á–Ω—ã–µ –∑–Ω–∞–Ω–∏—è.';
    if (score >= 60) return '–•–æ—Ä–æ—à–æ! –ï—Å—Ç—å –∫—É–¥–∞ —Ä–∞—Å—Ç–∏.';
    return '–¢—Ä–µ–±—É–µ—Ç—Å—è —Ä–∞–±–æ—Ç–∞. –°–æ—Å—Ä–µ–¥–æ—Ç–æ—á—å—Ç–µ—Å—å –Ω–∞ —Ä–µ–∫–æ–º–µ–Ω–¥—É–µ–º—ã—Ö —Ç–µ–º–∞—Ö.';
  };

  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –∫–Ω–æ–ø–∫–∏ "–°–æ–∑–¥–∞—Ç—å –ø–ª–∞–Ω –æ–±—É—á–µ–Ω–∏—è"
  const handleCreatePlan = () => {
    // –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –≤ localStorage –¥–ª—è GoalSetting
    const testResults = {
      score: result.estimatedScore,
      weakAreas: result.recommendedFocus,
      strongAreas: result.themeBreakdown
        .filter(theme => theme.percentage >= 70)
        .map(theme => theme.theme),
      assessmentId: savedAssessmentId || localStorage.getItem('lastAssessmentId'),
      userId: localStorage.getItem('currentUserId') || 'user-' + Date.now(),
      totalQuestions: result.themeBreakdown.reduce((total, theme) => total + theme.total, 0),
      correctAnswers: result.themeBreakdown.reduce((total, theme) => total + theme.correct, 0)
    };
    
    localStorage.setItem('assessmentResults', JSON.stringify(testResults));
    console.log('üíæ Assessment results saved to localStorage:', testResults);
    
    setShowGoalSetting(true);
  };

  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–≥–¥–∞ —Ü–µ–ª–∏ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã
  const handleGoalsSet = () => {
    router.push('/learning/plan');
  };

  // –ï—Å–ª–∏ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫—É —Ü–µ–ª–µ–π
  if (showGoalSetting) {
    return (
      <GoalSetting 
        currentScore={result.estimatedScore}
        onGoalsSet={handleGoalsSet}
      />
    );
  }

  // –†–∞–∑–¥–µ–ª—è–µ–º —Ç–µ–º—ã –Ω–∞ —Å–∏–ª—å–Ω—ã–µ –∏ —Å–ª–∞–±—ã–µ
  const strongThemes = result.themeBreakdown.filter(theme => theme.percentage >= 70);
  const weakThemes = result.themeBreakdown.filter(theme => theme.percentage < 60);

  // –í—ã—á–∏—Å–ª—è–µ–º –æ–±—â—É—é —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
  const totalQuestions = result.themeBreakdown.reduce((total, theme) => total + theme.total, 0);
  const correctAnswers = result.themeBreakdown.reduce((total, theme) => total + theme.correct, 0);

  return (
    <Card className="max-w-6xl w-full mx-auto border-0 shadow-2xl rounded-3xl overflow-hidden">
      {/* –°–≤–µ—Ç–ª—ã–π —Ö–µ–¥–µ—Ä */}
      <div className="bg-gradient-to-br from-gray-50 to-blue-50 px-8 py-12 border-b border-gray-200">
        <div className="text-center mb-8">
          <h1 className="text-5xl font-bold text-gray-900 mb-4">–†–µ–∑—É–ª—å—Ç–∞—Ç—ã —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è</h1>
          <p className="text-gray-600 text-xl">
            –í–æ—Ç –∫–∞–∫ –≤—ã —Å–ø—Ä–∞–≤–∏–ª–∏—Å—å —Å –∑–∞–¥–∞–Ω–∏—è–º–∏
            {isSaving && (
              <span className="text-green-600 ml-2">‚è≥ –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö...</span>
            )}
            {savedAssessmentId && (
              <span className="text-green-600 ml-2">‚úÖ –°–æ—Ö—Ä–∞–Ω–µ–Ω–æ (ID: {savedAssessmentId})</span>
            )}
          </p>
        </div>

        {/* –û—Å–Ω–æ–≤–Ω–æ–π —Å—á–µ—Ç */}
        <div className="bg-white rounded-2xl p-8 max-w-md mx-auto shadow-lg border border-gray-200">
          <div className="text-center mb-4">
            <span className="text-2xl font-bold text-gray-700 block mb-2">
              –û–ë–©–ò–ô –†–ï–ó–£–õ–¨–¢–ê–¢
            </span>
            <div className="flex items-center justify-center space-x-4">
              <div className={`text-7xl font-bold ${getScoreColor(result.estimatedScore)}`}>
                {result.estimatedScore}%
              </div>
            </div>
            <p className={`text-xl font-semibold mt-4 ${getScoreColor(result.estimatedScore)}`}>
              {getScoreMessage(result.estimatedScore)}
            </p>
            
            {/* –î–µ—Ç–∞–ª—å–Ω–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ */}
            <div className="mt-6 grid grid-cols-3 gap-4 text-sm">
              <div className="text-center">
                <div className="text-2xl font-bold text-blue-600">{totalQuestions}</div>
                <div className="text-gray-600">–≤—Å–µ–≥–æ –≤–æ–ø—Ä–æ—Å–æ–≤</div>
              </div>
              <div className="text-center">
                <div className="text-2xl font-bold text-green-600">{correctAnswers}</div>
                <div className="text-gray-600">–ø—Ä–∞–≤–∏–ª—å–Ω–æ</div>
              </div>
              <div className="text-center">
                <div className="text-2xl font-bold text-red-600">{totalQuestions - correctAnswers}</div>
                <div className="text-gray-600">–æ—à–∏–±–æ–∫</div>
              </div>
            </div>
          </div>
        </div>
      </div>

      {/* –û—Å–Ω–æ–≤–Ω–æ–π –∫–æ–Ω—Ç–µ–Ω—Ç */}
      <div className="px-8 py-8 bg-white">
        <div className="grid grid-cols-1 xl:grid-cols-2 gap-8 mb-8">
          {/* –õ–µ–≤–∞—è –∫–æ–ª–æ–Ω–∫–∞ - –†–µ–∑—É–ª—å—Ç–∞—Ç—ã –ø–æ —Ç–µ–º–∞–º */}
          <div className="flex flex-col">
            <div className="flex items-center space-x-3 mb-6">
              <div className="p-2 bg-blue-100 rounded-xl">
                <span className="text-blue-600 text-xl">üìä</span>
              </div>
              <div>
                <h2 className="text-2xl font-bold text-gray-900">–†–µ–∑—É–ª—å—Ç–∞—Ç—ã –ø–æ —Ç–µ–º–∞–º</h2>
                <p className="text-gray-600">–î–µ—Ç–∞–ª—å–Ω–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ –∫–∞–∂–¥–æ–π —Ç–µ–º–µ</p>
              </div>
            </div>
            
            <div className="bg-gray-50 rounded-2xl p-6 flex-1">
              <div className="space-y-4 max-h-[500px] overflow-y-auto pr-2">
                {result.themeBreakdown.map(theme => (
                  <div key={theme.theme} className="bg-white rounded-xl p-4 shadow-sm border border-gray-200 hover:shadow-md transition-shadow">
                    <div className="flex items-center justify-between mb-3">
                      <h3 className="font-semibold text-gray-900 text-lg">
                        {theme.theme}
                      </h3>
                      <div className={`text-xl font-bold ${
                        theme.percentage >= 80 ? 'text-green-600' : 
                        theme.percentage >= 60 ? 'text-yellow-600' : 'text-red-600'
                      }`}>
                        {theme.percentage}%
                      </div>
                    </div>
                    
                    <div className="flex items-center justify-between text-sm text-gray-600 mb-2">
                      <span>{theme.correct} –∏–∑ {theme.total} –ø—Ä–∞–≤–∏–ª—å–Ω—ã—Ö</span>
                    </div>
                    
                    <div className="w-full bg-gray-200 rounded-full h-3">
                      <div 
                        className={`h-3 rounded-full transition-all duration-500 ${
                          theme.percentage >= 80 ? 'bg-green-500' : 
                          theme.percentage >= 60 ? 'bg-yellow-500' : 
                          'bg-red-500'
                        }`}
                        style={{ width: `${theme.percentage}%` }}
                      />
                    </div>
                  </div>
                ))}
              </div>
            </div>
          </div>

          {/* –ü—Ä–∞–≤–∞—è –∫–æ–ª–æ–Ω–∫–∞ - –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ */}
          <div className="flex flex-col">
            <div className="flex items-center space-x-3 mb-6">
              <div className="p-2 bg-purple-100 rounded-xl">
                <span className="text-purple-600 text-xl">üéØ</span>
              </div>
              <div>
                <h2 className="text-2xl font-bold text-gray-900">–†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏</h2>
                <p className="text-gray-600">–ü–µ—Ä—Å–æ–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ —Å–æ–≤–µ—Ç—ã –ø–æ –ø–æ–¥–≥–æ—Ç–æ–≤–∫–µ</p>
              </div>
            </div>

            <div className="space-y-6 flex-1">
              {/* –°–∏–ª—å–Ω—ã–µ —Å—Ç–æ—Ä–æ–Ω—ã */}
              <div className="bg-green-50 rounded-2xl p-6 border border-green-200 h-fit">
                <div className="flex items-center space-x-3 mb-4">
                  <div className="w-10 h-10 bg-green-100 rounded-xl flex items-center justify-center">
                    <span className="text-green-600 text-lg">üí™</span>
                  </div>
                  <div>
                    <h3 className="font-bold text-green-800 text-lg">–°–∏–ª—å–Ω—ã–µ —Å—Ç–æ—Ä–æ–Ω—ã</h3>
                    <p className="text-green-600 text-sm">–¢–µ–º—ã, –∫–æ—Ç–æ—Ä—ã–µ –≤—ã —Ö–æ—Ä–æ—à–æ –∑–Ω–∞–µ—Ç–µ</p>
                  </div>
                </div>
                <div className="flex flex-wrap gap-3">
                  {strongThemes.length > 0 ? (
                    strongThemes.map(theme => (
                      <span 
                        key={theme.theme} 
                        className="bg-white text-green-700 px-4 py-2 rounded-xl text-sm font-medium shadow-sm border border-green-200 flex items-center space-x-2"
                      >
                        <span className="text-green-500">‚úì</span>
                        <span>{theme.theme}</span>
                      </span>
                    ))
                  ) : (
                    <div className="text-center w-full py-4">
                      <span className="text-green-600 text-lg">üìà</span>
                      <p className="text-green-700 text-sm mt-2">–ü—Ä–æ–¥–æ–ª–∂–∞–π—Ç–µ –ø—Ä–∞–∫—Ç–∏–∫–æ–≤–∞—Ç—å—Å—è –¥–ª—è —Ä–∞–∑–≤–∏—Ç–∏—è —Å–∏–ª—å–Ω—ã—Ö —Å—Ç–æ—Ä–æ–Ω</p>
                    </div>
                  )}
                </div>
              </div>

              {/* –ù–∞–¥ —á–µ–º –ø–æ—Ä–∞–±–æ—Ç–∞—Ç—å */}
              <div className="bg-orange-50 rounded-2xl p-6 border border-orange-200 h-fit">
                <div className="flex items-center space-x-3 mb-4">
                  <div className="w-10 h-10 bg-orange-100 rounded-xl flex items-center justify-center">
                    <span className="text-orange-600 text-lg">üéØ</span>
                  </div>
                  <div>
                    <h3 className="font-bold text-orange-800 text-lg">–ù–∞–¥ —á–µ–º –ø–æ—Ä–∞–±–æ—Ç–∞—Ç—å</h3>
                    <p className="text-orange-600 text-sm">–¢–µ–º—ã –¥–ª—è —É–ª—É—á—à–µ–Ω–∏—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤</p>
                  </div>
                </div>
                <div className="space-y-3">
                  {result.recommendedFocus.slice(0, 5).map((theme, index) => (
                    <div 
                      key={theme}
                      className="bg-white text-orange-700 p-4 rounded-xl shadow-sm border border-orange-200 flex items-center space-x-3"
                    >
                      <div className={`w-8 h-8 rounded-lg flex items-center justify-center text-white text-sm font-bold ${
                        index === 0 ? 'bg-red-500' :
                        index === 1 ? 'bg-orange-500' :
                        index === 2 ? 'bg-yellow-500' : 
                        'bg-gray-400'
                      }`}>
                        {index + 1}
                      </div>
                      <span className="font-medium flex-1">{theme}</span>
                    </div>
                  ))}
                </div>
              </div>

              {/* –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ */}
              <div className="grid grid-cols-3 gap-4">
                <div className="bg-white rounded-xl p-4 text-center shadow-sm border border-gray-200">
                  <div className="text-2xl font-bold text-blue-600">{result.themeBreakdown.length}</div>
                  <div className="text-xs text-gray-600 mt-1">–í—Å–µ–≥–æ —Ç–µ–º</div>
                </div>
                <div className="bg-white rounded-xl p-4 text-center shadow-sm border border-gray-200">
                  <div className="text-2xl font-bold text-green-600">{strongThemes.length}</div>
                  <div className="text-xs text-gray-600 mt-1">–û—Å–≤–æ–µ–Ω–æ —Ç–µ–º</div>
                </div>
                <div className="bg-white rounded-xl p-4 text-center shadow-sm border border-gray-200">
                  <div className="text-2xl font-bold text-orange-600">{result.recommendedFocus.length}</div>
                  <div className="text-xs text-gray-600 mt-1">–î–ª—è —É–ª—É—á—à–µ–Ω–∏—è</div>
                </div>
              </div>
            </div>
          </div>
        </div>

        {/* –ö–Ω–æ–ø–∫–∏ –¥–µ–π—Å—Ç–≤–∏–π */}
        <div className="flex flex-col sm:flex-row gap-4 justify-center items-center mb-6">
          <Button 
            onClick={handleCreatePlan}
            disabled={isSaving}
            className="px-12 py-4 text-lg font-semibold bg-gradient-to-r from-blue-600 to-indigo-600 hover:from-blue-700 hover:to-indigo-700 text-white rounded-2xl shadow-lg hover:shadow-xl transition-all transform hover:scale-105 disabled:opacity-50 disabled:cursor-not-allowed"
          >
            {isSaving ? '–°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ...' : '–°–æ–∑–¥–∞—Ç—å –ø–ª–∞–Ω –æ–±—É—á–µ–Ω–∏—è'}
          </Button>
        </div>

        {/* –ü—Ä–∏–∑—ã–≤ –∫ –¥–µ–π—Å—Ç–≤–∏—é */}
        <div className="bg-gradient-to-r from-blue-50 to-indigo-50 rounded-2xl p-8 text-center border border-blue-200">
          <h3 className="text-2xl font-bold text-gray-900 mb-3">
            –ì–æ—Ç–æ–≤—ã —É–ª—É—á—à–∏—Ç—å —Å–≤–æ–∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã?
          </h3>
          <p className="text-gray-600 mb-6 max-w-2xl mx-auto text-lg">
            –ù–∞ –æ—Å–Ω–æ–≤–µ –≤–∞—à–∏—Ö —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ –º—ã —Å–æ–∑–¥–∞–¥–∏–º –ø–µ—Ä—Å–æ–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –ø–ª–∞–Ω –ø–æ–¥–≥–æ—Ç–æ–≤–∫–∏, 
            –∫–æ—Ç–æ—Ä—ã–π –ø–æ–º–æ–∂–µ—Ç –≤–∞–º —Å–æ—Å—Ä–µ–¥–æ—Ç–æ—á–∏—Ç—å—Å—è –Ω–∞ —Å–∞–º—ã—Ö –≤–∞–∂–Ω—ã—Ö —Ç–µ–º–∞—Ö –∏ —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ –ø–æ–¥–≥–æ—Ç–æ–≤–∏—Ç—å—Å—è –∫ –ï–ì–≠
          </p>
          <div className="text-sm text-green-600 font-medium flex items-center justify-center space-x-2">
            <span>‚úÖ</span>
            <span>
              {isSaving ? '–°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –≤ SQLite –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö...' : 
               savedAssessmentId ? `–†–µ–∑—É–ª—å—Ç–∞—Ç—ã —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã –≤ –ë–î (ID: ${savedAssessmentId})` : 
               '–†–µ–∑—É–ª—å—Ç–∞—Ç—ã —Ç–µ—Å—Ç–∞ –±—É–¥—É—Ç —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏'}
            </span>
          </div>
        </div>
      </div>
    </Card>
  );
};

export default ResultsView;